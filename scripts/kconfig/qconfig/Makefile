# ===========================================================================
# Kernel configuration targets
# These targets are used from kconfig top-level makefile

PHONY +=  xconfig qconfig

xconfig: $(obj)/qconf
	$< $(Kconfig)

qconfig: $(obj)/qconf
	$< $(Kconfig)

# ===========================================================================
# qconf:  Used for the xconfig/qconfig target
#         Based on Qt4+ which needs to be installed to compile it

# Meta object files (moc files) have to be considered for every class that uses the Q_OBJECT macro.
# We collect all class header files below, build moc_[filename].o object filenames and store those in "MOCS".
# Assumtion: All header files in this directory contain c++ code.
MOC_HEADERS := $(wildcard $(obj)/qconfig/*.h)
MOC_SOURCE_FILES := $(patsubst $(obj)/qconfig/%,%,$(MOC_HEADERS)) # remove directory part
MOC_DEST_FILES := $(patsubst %.h,moc_%.o,$(MOC_SOURCE_FILES)) # add moc_ prefix
MOCS := $(patsubst %,qconfig/%,$(MOC_DEST_FILES)) # add directory part

# Object files used by this kconfig flavours listed below. Meta object files (moc files) are generated by
# the Qt moc tool. We have to build and link those generated files, too.
qconf-cxxobjs	:= qconfig/qconf.o qconfig/configItem.o qconfig/configModel.o qconfig/configmodeldelegate.o \
     qconfig/infoViewWidget.o qconfig/mainwindow.o  qconfig/searchfiltermodelproxy.o qconfig/searchmodel.o \
     $(MOCS)

# Object files used by all kconfig flavours listed below
qconf-objs	:= zconf.tab.o

ifeq ($(MAKECMDGOALS),qconfig)
	qconf-target := 1
endif

ifeq ($(MAKECMDGOALS),xconfig)
	qconf-target := 1
endif

ifeq ($(qconf-target),1)
	hostprogs-y += qconf
endif

clean-files	+= qconfig/moc_*.cc qconfig/ui_*.h qconfig/.tmp_qtcheck qconf

HOSTLOADLIBES_qconf	= $(KC_QT_LIBS)
HOSTCXXFLAGS	= $(KC_QT_CFLAGS)

$(obj)/qconfig/qconf.o: $(src)/qconfig/.tmp_qtcheck
$(obj)/qconfig/mainwindow.o: $(obj)/qconfig/ui_mainwindow.h

ifeq ($(qconf-target),1)
$(obj)/qconfig/.tmp_qtcheck: $(src)/Makefile
-include $(obj)/qconfig/.tmp_qtcheck

# QT needs some extra effort...
$(obj)/qconfig/.tmp_qtcheck:
	@set -e; echo "  CHECK   qt"; dir=""; pkg=""; \
	if ! pkg-config --exists QtCore 2> /dev/null; then \
	        echo >&2 "*"; \
	        echo >&2 "* Unable to find any QT installation. Please make sure that"; \
	        echo >&2 "* the QT4 development package is correctly installed and"; \
	        echo >&2 "* either qmake can be found or install pkg-config or set"; \
	        echo >&2 "* the QTDIR environment variable to the correct location."; \
	        echo >&2 "*"; \
	        false; \
	else \
	  cflags="\$$(shell pkg-config QtCore QtGui --cflags)"; \
	  libs="\$$(shell pkg-config QtCore QtGui --libs)"; \
	  moc="\$$(shell pkg-config QtCore --variable=moc_location)"; \
	  [ -n "$$moc" ] || moc="\$$(shell pkg-config QtCore --variable=prefix)/bin/moc"; \
	  uic="\$$(shell pkg-config QtCore --variable=uic_location)"; \
	  [ -n "$$uic" ] || uic="\$$(shell pkg-config QtCore --variable=prefix)/bin/uic"; \
	fi; \
	echo "KC_QT_CFLAGS=$$cflags" > $@; \
	echo "KC_QT_LIBS=$$libs" >> $@; \
	echo "KC_QT_MOC=$$moc" >> $@; \
	echo "KC_QT_UIC=$$uic" >> $@
endif

quiet_cmd_moc = MOC     $@
      cmd_moc = $(KC_QT_MOC) -nn $< -o $@
quiet_cmd_uic = UIC     $@
      cmd_uic = $(KC_QT_UIC) -n $< -o $@

$(obj)/qconfig/moc_%.cc: $(obj)/qconfig/%.h
	$(call cmd,moc)

$(obj)/qconfig/ui_%.h: $(obj)/qconfig/%.ui
	$(call cmd,uic)

$(obj)/qconfig/%.o: $(obj)/qconfig/moc_%.o
